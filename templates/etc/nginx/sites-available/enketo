server {
    # ports
    listen 80;
    listen [::]:80;

    # server block/virtual host name
    server_name {{ nginx_server_name }};

    # force ssl
    #rewrite ^ https://$server_name$request_uri? permanent;
    # entity size
    client_max_body_size {{ client_max_body_size }};

    location / {
        # backend
        proxy_pass        {{ enketo_upstream }}; 

        # headers
        proxy_set_header  Accept-Encoding   "";
        proxy_set_header  Host            $host;
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;

        # no redirects
        proxy_redirect    off;

        # timeouts on unavailable backend(s)
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
}

server {
    # ports
    listen 443;
    listen [::]:443;

    # server block/virtual host name
    server_name {{ nginx_server_name }};

    # certs
    ssl_certificate      {{ nginx_cert_path }};
    ssl_certificate_key  {{ nginx_key_path }};

    # ssl opts
    ssl on;
    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers          RC4:HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    keepalive_timeout    70;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
    # tell client/browser to always use https
    add_header Strict-Transport-Security max-age=31536000;
    
    # entity size
    client_max_body_size {{ client_max_body_size }};

    location / {
        # backend
        proxy_pass        {{ enketo_upstream }}; 

        # headers
        proxy_set_header  Accept-Encoding   "";
        proxy_set_header  Host            $host;
        proxy_set_header  X-Real-IP       $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto https;

        # no redirects
        proxy_redirect    off;

        # timeouts on unavailable backend(s)
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
}
